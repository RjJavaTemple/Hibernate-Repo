package com.rj.dao;

import javax.persistence.Query;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.rj.entity.BankCoustmor;
import com.rj.utiality.UtialityImplitation;

public class MethodImplDao implements MethhodInDao
{
     
	@Override
	public void InsertOperacation()
	{
	      //Create Session
		Session  sec=UtialityImplitation.getSession();
		//Add The Tranction
		Transaction tx=null;
		try(sec)
		{
			//Begin Tranction
			tx=sec.beginTransaction();
			//Lode The Object
			BankCoustmor Bank=new BankCoustmor("Rashmi", 70000.0);
			//Save The Data
			sec.save(Bank);
			//Add The Tranction
			tx.commit();
		}
		catch (HibernateException he)
		{
		   he.printStackTrace();
		   if(tx!=null || tx.getStatus()!=null ||tx.getRollbackOnly())
			   tx.rollback();
		}
		catch (Exception e)
		{
		   e.printStackTrace();
		}
	}

	@Override
	public String UpdateSalary(int Acno,int Acno1,Double Amount)
	{
	    //Create The Session Object
		Session sec=UtialityImplitation.getSession();
		//Add The Tranction
		Transaction tx=null;
		try(sec)
		{
			//Begin Tranction
			tx=sec.beginTransaction();
			Query query=sec.createQuery("update BankCoustmor set Amount=Amount-:amt where PerId=:no");
			query.setParameter("amt",Acno);
			query.setParameter("no",Amount );
			Query query1=sec.createQuery("update BankCoustmor set Amount=Amount-:amt where PerId=:no");
			query1.setParameter("amt",Acno1);
			query1.setParameter("no",Amount );
			int Result=query.executeUpdate();
			int Result1=query.executeUpdate();
			
			if(Result==0||Result1==0)
			{
				tx.rollback();
				return "The data Are Rollback";
			}
			else
				return "The Data Are Commited Sucess";
		}
		catch (HibernateException he)
		{
		   he.printStackTrace();
		   if(tx!=null || tx.getStatus()!=null ||tx.getRollbackOnly())
			   tx.rollback();
		}
		return "Unown Exception Are Occure...!";
	}
      
}
